parameters:
  base_currency: 'EUR'
  exchange_api_uri: "%env(EXCHANGE_API_URL)%"
  exchange_api_key: "%env(EXCHANGE_API_TOKEN)%"
  math_round: "%env(MATH_ROUND)%"

services:
  _defaults:
    autowire: true
    public: false

  App\:
    resource: '../src/*'
    exclude: ['../src/*/{DependencyInjection,Model,Tests,Kernel.php}', '../src/**/*Exception.php']

  _instanceof:
    Symfony\Component\Console\Command\Command:
      tags: [ 'command' ]

  App\Application:
    public: true
    arguments:
      - !tagged_iterator command

  App\SharedKernel\ExchangeCalculator\Strategy\ExchangeRatesApiInformation:
    arguments:
      $apiToken: '%exchange_api_key%'
      $baseCurrency: '@base.currency'

  App\DepositWithdrawProcessor\Command\Validator\DepositWithdrawProcessorCommandValidator:
    arguments:
      $baseCurrency: '@base.currency'

  App\SharedKernel\Number\ExchangeableNumberFactory:
    arguments:
      $baseCurrency: '@base.currency'

  base.currency:
    class: App\DepositWithdrawProcessor\Model\Currency
    autowire: false
    arguments: ['%base_currency%']

  App\DepositWithdrawProcessor\Calculator\FeeCalculator: '@App\DepositWithdrawProcessor\Calculator\BasicFeeCalculator'
  App\DepositWithdrawProcessor\Input\InputHandler: '@App\DepositWithdrawProcessor\Input\CsvInputHandler'
  App\DepositWithdrawProcessor\Output\OutputHandler: '@App\DepositWithdrawProcessor\Output\StandardOutputHandler'
  App\DepositWithdrawProcessor\Storage\UserOperationRepository: '@App\DepositWithdrawProcessor\Storage\InMemoryUserOperationRepository'
  App\SharedKernel\ExchangeCalculator\ExchangeCalculator: '@App\SharedKernel\ExchangeCalculator\CacheableExchangeCalculator'
  App\SharedKernel\ExchangeCalculator\Strategy\ExchangeRatesInformation: '@App\SharedKernel\ExchangeCalculator\Strategy\ExchangeRatesApiInformation'
  App\SharedKernel\Math:
    arguments:
      - '%math_round%'
  GuzzleHttp\Client:
    arguments:
      - { 'base_uri': '%exchange_api_uri%' }